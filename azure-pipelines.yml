trigger:
- main

resources:
- repo: self

variables:
  imageRepo: sampleapp
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Build an image
      inputs:
        containerRegistry: 'sayedConRegistry'
        repository: '$(imageRepo)'
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/app/Dockerfile'
        tags: |
          $(tag)
          latest
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/s/kubernetes'
        artifact: 'manifests'
        publishLocation: 'pipeline'
        
- stage: Deploy
  displayName: deploy to k8s
  dependsOn: Build
  variables:
    acrsecret: arcauth
  jobs:
    - job: Deploy
      displayName: deploy to AKS
      pool:
        vmImage: ubuntu-latest
      steps:
        - task: DownloadPipelineArtifact@2
          inputs:
            buildType: 'current'
            artifactName: 'manifests'
            targetPath: '$(Pipeline.Workspace)/manifests'
            
        - task: KubernetesManifest@1
          inputs:
            action: 'createSecret'
            connectionType: 'kubernetesServiceConnection'
            kubernetesServiceConnection: 'sayedKubernetes'
            namespace: 'default'
            secretType: 'dockerRegistry'
            secretName: '$(acrsecret)'
            dockerRegistryEndpoint: 'sayedConRegistry'
        
        - task: KubernetesManifest@1
          inputs:
            action: 'deploy'
            connectionType: 'kubernetesServiceConnection'
            kubernetesServiceConnection: 'sayedKubernetes'
            namespace: 'default'
            manifests: |
              $(Pipeline.Workspace)/manifests/deployment.yml
              $(Pipeline.Workspace)/manifests/service.yml

